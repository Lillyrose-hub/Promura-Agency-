from fastapi import FastAPI, Form, UploadFile, File, Request
from fastapi.responses import HTMLResponse, RedirectResponse
from fastapi.staticfiles import StaticFiles
from datetime import datetime
import sys
import os
import shutil
from typing import List

# IMPORTANT: Set ENV before any OnlySnarf imports
os.environ['ENV'] = 'test'
os.environ['PATH_CONFIG'] = '/Users/leacieloramal/my_projects/onlysnarf/OnlySnarf/conf/test-config.conf'

# Add the current directory to Python path
sys.path.append(os.path.dirname(__file__))

# Now import our local module
from onlysnarf_client import PromuraClient
from profile_manager import profile_manager

# POST STORAGE
scheduled_posts = []

app = FastAPI(title="PROMURA Dashboard")
promura = PromuraClient()

# Create uploads directory
os.makedirs("uploads", exist_ok=True)
app.mount("/uploads", StaticFiles(directory="uploads"), name="uploads")

@app.get("/", response_class=HTMLResponse)
async def dashboard_home():
    return """
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>PROMURA Dashboard</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
                min-height: 100vh;
                padding: 20px;
            }
            
            .container {
                max-width: 800px;
                margin: 0 auto;
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
                border-radius: 20px;
                padding: 40px;
                box-shadow: 0 20px 40px rgba(236, 64, 122, 0.1);
                border: 1px solid rgba(255, 255, 255, 0.2);
            }
            
            .header {
                text-align: center;
                margin-bottom: 40px;
            }
            
            h1 {
                color: #ec407a;
                font-size: 2.5rem;
                font-weight: 300;
                margin-bottom: 10px;
            }
            
            .subtitle {
                color: #880e4f;
                font-size: 1.1rem;
                opacity: 0.8;
            }
            
            .form-group {
                margin-bottom: 25px;
            }
            
            label {
                display: block;
                margin-bottom: 8px;
                color: #880e4f;
                font-weight: 500;
                font-size: 0.95rem;
            }
            
            input, textarea, select {
                width: 100%;
                padding: 15px;
                border: 2px solid #f8bbd9;
                border-radius: 12px;
                font-size: 16px;
                background: rgba(248, 187, 217, 0.1);
                transition: all 0.3s ease;
            }
            
            input:focus, textarea:focus, select:focus {
                outline: none;
                border-color: #ec407a;
                background: white;
                box-shadow: 0 0 0 3px rgba(236, 64, 122, 0.1);
            }
            
            textarea {
                resize: vertical;
                min-height: 120px;
            }
            
            .file-input {
                border: 2px dashed #f8bbd9;
                padding: 20px;
                text-align: center;
                background: rgba(248, 187, 217, 0.05);
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .file-input:hover {
                border-color: #ec407a;
                background: rgba(236, 64, 122, 0.05);
            }
            
            .btn-primary {
                background: linear-gradient(135deg, #ec407a 0%, #ad1457 100%);
                color: white;
                padding: 16px 40px;
                border: none;
                border-radius: 50px;
                font-size: 1.1rem;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
                display: block;
                width: 100%;
                margin-top: 10px;
            }
            
            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 25px rgba(236, 64, 122, 0.3);
            }
            
            .nav-links {
                display: flex;
                justify-content: center;
                gap: 20px;
                margin-top: 30px;
                flex-wrap: wrap;
            }
            
            .nav-btn {
                padding: 12px 25px;
                border: 2px solid #ec407a;
                border-radius: 25px;
                color: #ec407a;
                text-decoration: none;
                font-weight: 500;
                transition: all 0.3s ease;
                background: white;
            }
            
            .nav-btn:hover {
                background: #ec407a;
                color: white;
                transform: translateY(-2px);
            }
            
            small {
                color: #ad1457;
                opacity: 0.7;
                font-size: 0.85rem;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>PROMURA Dashboard</h1>
                <p class="subtitle">Schedule your content with elegance and precision</p>
            </div>
            
            <form action="/schedule" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="text">Post Content</label>
                    <textarea name="text" placeholder="Share your thoughts, stories, or updates..." required></textarea>
                </div>
                
                <div class="form-group">
                    <label for="files">Media Files</label>
                    <input type="file" name="files" multiple class="file-input">
                    <small>Select images or videos to accompany your post</small>
                </div>
                
                <div class="form-group">
                    <label for="schedule_time">Schedule Time</label>
                    <input type="datetime-local" name="schedule_time">
                    <small>Leave empty to post immediately</small>
                </div>
                
                <button type="submit" class="btn-primary">
                    Schedule Post
                </button>
            </form>
            
            <div class="nav-links">
                <a href="/queue" class="nav-btn">View Queue</a>
                <a href="/status" class="nav-btn">System Status</a>
            </div>
        </div>
    </body>
    </html>
    """

@app.post("/schedule")
async def schedule_post(
    text: str = Form(...), 
    schedule_time: str = Form(None),
    files: List[UploadFile] = File(None)
):
    """
    Handle post scheduling from the form
    """
    try:
        file_paths = []
        
        # Handle file uploads - fixed logic
        if files:
            for file in files:
                if file.filename:  # Check if file has actual content
                    file_path = f"uploads/{file.filename}"
                    with open(file_path, "wb") as buffer:
                        shutil.copyfileobj(file.file, buffer)
                    file_paths.append(file_path)
                    print(f"Saved file: {file.filename}")
        
        # Use our Promura client to schedule the post
        result = promura.schedule_post(
            text=text,
            files=file_paths,
            schedule_time=schedule_time
        )
        
        # Store the post in our queue
        scheduled_posts.append({
            "text": text,
            "files": file_paths,
            "schedule_time": schedule_time,
            "status": result['message'],
            "timestamp": datetime.now().isoformat()
        })
        
        # Return success page
        files_html = ""
        if file_paths:
            file_names = ', '.join([os.path.basename(f) for f in file_paths])
            files_html = f"""
            <div class="info-item">
                <span class="label">Files:</span>
                <span class="value">{file_names}</span>
            </div>
            """
        
        schedule_info = schedule_time if schedule_time else "Immediately"
        
        return HTMLResponse(content=f"""
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Post Scheduled - PROMURA</title>
            <style>
                body {{
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
                    min-height: 100vh;
                    padding: 20px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }}
                
                .container {{
                    max-width: 600px;
                    background: rgba(255, 255, 255, 0.95);
                    backdrop-filter: blur(10px);
                    border-radius: 20px;
                    padding: 40px;
                    box-shadow: 0 20px 40px rgba(236, 64, 122, 0.1);
                    text-align: center;
                }}
                
                h1 {{
                    color: #ec407a;
                    font-size: 2.2rem;
                    margin-bottom: 30px;
                }}
                
                .post-preview {{
                    background: rgba(248, 187, 217, 0.1);
                    border-radius: 15px;
                    padding: 25px;
                    margin: 25px 0;
                    text-align: left;
                }}
                
                .info-item {{
                    display: flex;
                    margin-bottom: 15px;
                }}
                
                .label {{
                    font-weight: 600;
                    color: #880e4f;
                    min-width: 120px;
                }}
                
                .value {{
                    color: #333;
                    flex: 1;
                }}
                
                .nav-btn {{
                    padding: 12px 25px;
                    border: 2px solid #ec407a;
                    border-radius: 25px;
                    color: #ec407a;
                    text-decoration: none;
                    font-weight: 500;
                    transition: all 0.3s ease;
                    background: white;
                    display: inline-block;
                    margin: 10px;
                }}
                
                .nav-btn:hover {{
                    background: #ec407a;
                    color: white;
                }}
            </style>
        </head>
        <body>
            <div class="container">
                <h1>Post Scheduled Successfully</h1>
                
                <div class="post-preview">
                    <div class="info-item">
                        <span class="label">Content:</span>
                        <span class="value">{text}</span>
                    </div>
                    {files_html}
                    <div class="info-item">
                        <span class="label">Scheduled:</span>
                        <span class="value">{schedule_info}</span>
                    </div>
                    <div class="info-item">
                        <span class="label">Status:</span>
                        <span class="value">{result['message']}</span>
                    </div>
                </div>
                
                <a href="/queue" class="nav-btn">View Queue</a>
                <a href="/" class="nav-btn">New Post</a>
            </div>
        </body>
        </html>
        """)
    
    except Exception as e:
        return HTMLResponse(content=f"""
        <!DOCTYPE html>
        <html>
        <head><title>Error - PROMURA</title></head>
        <body style="background: #fce4ec; padding: 40px; text-align: center;">
            <h1 style="color: #d32f2f;">Scheduling Failed</h1>
            <p style="color: #c62828; margin: 20px;">{str(e)}</p>
            <a href="/" style="padding: 12px 25px; border: 2px solid #ec407a; border-radius: 25px; color: #ec407a; text-decoration: none;">Try Again</a>
        </body>
        </html>
        """)

@app.get("/queue", response_class=HTMLResponse)
async def post_queue():
    """Show all scheduled posts"""
    count = len(scheduled_posts)
    posts_html = ""
    
    if scheduled_posts:
        for i, post in enumerate(reversed(scheduled_posts)):
            file_info = ""
            if post.get('files'):
                file_count = len(post['files'])
                file_info = f"{file_count} file{'s' if file_count > 1 else ''}"
            
            timestamp = datetime.fromisoformat(post['timestamp']).strftime("%b %d, %Y at %I:%M %p")
            
            posts_html += f"""
            <div style="background: white; border-radius: 15px; padding: 25px; margin: 20px 0; border: 1px solid rgba(248, 187, 217, 0.3);">
                <h3 style="color: #880e4f;">Post #{len(scheduled_posts) - i}</h3>
                <p style="color: #333; margin: 15px 0;">{post['text'][:150]}{'...' if len(post['text']) > 150 else ''}</p>
                <p style="color: #666; font-size: 0.9rem;">Schedule: {post['schedule_time'] or 'Immediately'}</p>
                <p style="color: #666; font-size: 0.9rem;">Status: {post['status']}</p>
                <p style="color: #666; font-size: 0.9rem;">Created: {timestamp}</p>
                {f'<p style="color: #666; font-size: 0.9rem;">Files: {file_info}</p>' if file_info else ''}
            </div>
            """
    else:
        posts_html = """
        <div style="text-align: center; padding: 60px 20px;">
            <h3 style="color: #888;">No posts scheduled yet</h3>
            <p style="color: #999; margin: 15px 0;">Your scheduled posts will appear here</p>
            <a href="/" style="background: linear-gradient(135deg, #ec407a 0%, #ad1457 100%); color: white; padding: 12px 30px; border-radius: 25px; text-decoration: none; display: inline-block; margin-top: 20px;">Schedule Your First Post</a>
        </div>
        """
    
    return HTMLResponse(content=f"""
    <!DOCTYPE html>
    <html>
    <head>
        <title>Post Queue - PROMURA</title>
        <style>
            body {{
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
                min-height: 100vh;
                padding: 20px;
            }}
            .container {{
                max-width: 900px;
                margin: 0 auto;
                background: rgba(255, 255, 255, 0.95);
                border-radius: 20px;
                padding: 40px;
            }}
            h1 {{ color: #ec407a; }}
            .nav-btn {{
                padding: 12px 25px;
                border: 2px solid #ec407a;
                border-radius: 25px;
                color: #ec407a;
                text-decoration: none;
                margin: 10px;
                display: inline-block;
            }}
        </style>
    </head>
    <body>
        <div class="container">
            <h1>Post Queue (Total: {count})</h1>
            <a href="/" class="nav-btn">New Post</a>
            {posts_html}
        </div>
    </body>
    </html>
    """)

@app.get("/status")
async def system_status():
    """Check system status"""
    status = promura.test_connection()
    return {
        "dashboard": "PROMURA Dashboard Online",
        "onlysnarf_integration": status,
        "scheduled_posts": len(scheduled_posts)
    }

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
